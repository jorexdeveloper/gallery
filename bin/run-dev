#!/bin/bash

# Run the development server

#
# Functions
#

log() {
	if [[ -t 2 ]]; then
		local C0=$'\033[0m'
		local C1=$'\033[31m'
		local C2=$'\033[32m'
		local C3=$'\033[33m'
		local C4=$'\033[34m'
		local C5=$'\033[35m'
		local CB=$'\033[1m'
	fi

	local n="${C0}"
	local c="${C4}"
	local p='*'
	local e=

	while getopts ":ceswd" opt; do
		case "${opt}" in
			c)
				p='✖'
				c="${C1}"
				e=1
				;;
			e)
				p='✖'
				c="${C1}"
				;;
			s)
				p='✔'
				c="${C2}"
				;;
			w)
				p='!'
				c="${C3}"
				;;
			d)
				p='+'
				c="${C5}"
				;;
			*) ;;
		esac
	done
	shift $((OPTIND - 1))
	unset OPTIND

	printf "${n}[${CB}${c}${p}${n}] ${NAME}: %s\n" "${*}" >&2

	if [[ ${e} ]]; then
		exit 1
	fi
}

usage() {
	echo "${USAGE}"
}

#
# Entry
#

NAME="$(basename "${0}")"
BASE="$(realpath "$(dirname "${0}")"/..)"

log "Initializing virtual environment."

if [[ -d ${BASE}/.venv && -f ${BASE}/.venv/bin/activate ]]; then
	. "${BASE}"/.venv/bin/activate
else
	log -w "No virtual environment found!"
fi

for cmd in dotenv flask; do
	if ! command -v "${cmd}" &>/dev/null; then
		log -c "${cmd} is not installed!"
	fi
done

if ! cd "${BASE}" &>/dev/null; then
	log -c "Failed to change to project directory!"
fi

log "Initializing environment variables."

if [[ -f .env ]]; then
	eval "$(dotenv list --format shell | grep -e ^CACHE_DIR -e ^MANIFEST_FILE)"

	for var in CACHE_DIR MANIFEST_FILE; do
		if [[ ! "${!var}" ]]; then
			log -c "Variable ${var} is not set!"
		fi
	done
else
	log -c ".env file not found!"
fi

log "Starting the development server."

exec flask run \
	--debug \
	--host 0.0.0.0 \
	--port 5000 \
	--extra-files "${CACHE_DIR:-.}/${MANIFEST_FILE:-manifest.json}" "${@}"
