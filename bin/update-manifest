#!/bin/sh

# Update the manifest file

#
# Functions
#

log() {
    if [ -t 2 ]; then
        C0='\033[0m'
        C1='\033[31m'
        C2='\033[32m'
        C3='\033[33m'
        C4='\033[34m'
        C5='\033[35m'
        CB='\033[1m'
    fi
    n="${C0}"
    c="${C4}"
    p='*'
    while getopts ":eswd" opt; do
        case "${opt}" in
            e)
                p='✖'
                c="${C1}"
                ;;
            s)
                p='✔'
                c="${C2}"
                ;;
            w)
                p='!'
                c="${C3}"
                ;;
            d)
                p='+'
                c="${C5}"
                ;;
            *) ;;
        esac
    done
    shift $((OPTIND - 1))

    printf "${n}[${CB}${c}${p}${n}] ${NAME}: %s\n" "${*}" >&2
}

usage() {
    echo "${USAGE}"
}

#
# Entry
#

NAME="$(basename "${0}")"
BASE="$(realpath "$(dirname "${0}")"/..)"
PID=

USAGE="\
Usage: ${NAME} [OPTION]

Update the manifest file.

Options:
  -p <PID>  Reload a running server.
  -h        Show help message and exit."

while getopts ":p:h" opt; do
    case "${opt}" in
        p) PID="${OPTARG}" ;;
        h)
            usage
            exit
            ;;
        :)
            echo "${NAME}: option '-${OPTARG}' requires an argument."
            usage
            exit 1
            ;;
        *)
            echo "${NAME}: unknown option '-${OPTARG}'."
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

log "Initializing virtual environment."

if [ -d "${BASE}"/.venv ] && [ -f "${BASE}"/.venv/bin/activate ]; then
    . "${BASE}"/.venv/bin/activate
else
    log -w "No virtual environment found!"
fi

if ! command -v python3 >/dev/null 2>&1; then
    log -e "Python3 not installed!"
    exit 1
fi

cd "${BASE}" >/dev/null 2>&1 || {
    log -e "Failed to switch to project directory!"
    exit 1
}

log "Updating the manifest file."

if python3 -B -m app.manifest >/dev/null 2>&1; then
    log -s "Manifest file updated succesfully!"
else
    log -e "Failed to update the manifest file."
    exit 1
fi

if [ -n "${PID}" ]; then
    if pgrep "${PID}" >/dev/null 2>&1; then
        log "Reloading running server: ${PID}"
        kill -HUP "${PID}"
    else
        log -e "No running server with PID: ${PID}"
        exit 1
    fi
fi
