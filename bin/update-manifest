#!/bin/bash

# Update the manifest file

#
# Functions
#

log() {
	if [[ -t 2 ]]; then
		local C0=$'\033[0m'
		local C1=$'\033[31m'
		local C2=$'\033[32m'
		local C3=$'\033[33m'
		local C4=$'\033[34m'
		local C5=$'\033[35m'
		local CB=$'\033[1m'
	fi

	local n="${C0}"
	local c="${C4}"
	local p='*'
	local e=

	while getopts ":ceswd" opt; do
		case "${opt}" in
			c)
				p='✖'
				c="${C1}"
				e=1
				;;
			e)
				p='✖'
				c="${C1}"
				;;
			s)
				p='✔'
				c="${C2}"
				;;
			w)
				p='!'
				c="${C3}"
				;;
			d)
				p='+'
				c="${C5}"
				;;
			*) ;;
		esac
	done
	shift $((OPTIND - 1))
	unset OPTIND

	printf "${n}[${CB}${c}${p}${n}] ${NAME}: %s\n" "${*}" >&2

	if [[ ${e} ]]; then
		exit 1
	fi
}

usage() {
	echo "${USAGE}"
}

#
# Entry
#

NAME="$(basename "${0}")"
BASE="$(realpath "$(dirname "${0}")"/..)"

PID=()

USAGE="\
Usage: ${NAME} [OPTION]

Update the manifest file.

Options:
  -p <PID>  Reload a running server.
  -h        Show help message and exit."

while getopts ":p:h" opt; do
	case "${opt}" in
		p)
			PID+=("${OPTARG}")
			;;
		h)
			usage
			exit
			;;
		:)
			echo "${NAME}: option '-${OPTARG}' requires an argument."
			usage
			exit 1
			;;
		*)
			echo "${NAME}: unknown option '-${OPTARG}'."
			usage
			exit 1
			;;
	esac
done
shift $((OPTIND - 1))
unset OPTIND

log "Initializing virtual environment."

if [[ -d ${BASE}/.venv && -f ${BASE}/.venv/bin/activate ]]; then
	. "${BASE}"/.venv/bin/activate
else
	log -w "No virtual environment found!"
fi

if ! command -v python3 &>/dev/null; then
	log -c "python3 is not installed!"
fi

if ! cd "${BASE}" &>/dev/null; then
	log -c "Failed to change to project directory!"
fi

log "Updating the manifest file."

if python3 -B -m app.manifest &>/dev/null; then
	log -s "Manifest file updated succesfully!"
else
	log -c "Failed to update the manifest file."
fi

if [[ ${#PID} -gt 0 ]]; then
	log "Reloading running servers."

	bash bin/reload-server "${PID[@]}"
fi
